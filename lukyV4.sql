--
-- Script was generated by Devart dbForge Studio for MySQL, Version 10.0.225.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 7/12/2024 3:28:52 PM
-- Server version: 8.4.0
--

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

DROP DATABASE IF EXISTS luky;

CREATE DATABASE IF NOT EXISTS luky
CHARACTER SET utf8mb4
COLLATE utf8mb4_0900_ai_ci;

--
-- Set default database
--
USE luky;

--
-- Create table `usuarios`
--
CREATE TABLE IF NOT EXISTS usuarios (
  ID int NOT NULL,
  nombres varchar(50) NOT NULL,
  apellidoPaterno varchar(75) NOT NULL,
  apellidoMaterno varchar(75) NOT NULL,
  email varchar(50) NOT NULL,
  pass varchar(30) NOT NULL,
  telefono varchar(10) DEFAULT NULL,
  calificacion decimal(2, 1) NOT NULL DEFAULT 0.0,
  isTrabajador tinyint NOT NULL DEFAULT 0,
  fechaCreacion datetime DEFAULT (NOW()),
  fechaModif datetime DEFAULT (NOW()),
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create table `categorias`
--
CREATE TABLE IF NOT EXISTS categorias (
  ID int NOT NULL AUTO_INCREMENT,
  tipoCategoria varchar(50) NOT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create table `publicaciones`
--
CREATE TABLE IF NOT EXISTS publicaciones (
  ID int NOT NULL AUTO_INCREMENT,
  tituloP varchar(50) NOT NULL,
  fecha datetime NOT NULL DEFAULT (NOW()),
  descripcion text NOT NULL,
  precioI decimal(10, 2) DEFAULT 0.00,
  categoriaID int NOT NULL,
  usuarioID int NOT NULL,
  valoracion decimal(10, 2) NOT NULL DEFAULT 0.00,
  precioF decimal(10, 2) DEFAULT 0.00,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE publicaciones
ADD CONSTRAINT FK_categoria FOREIGN KEY (categoriaID)
REFERENCES categorias (ID) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE publicaciones
ADD CONSTRAINT FK_user FOREIGN KEY (usuarioID)
REFERENCES usuarios (ID) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$

--
-- Create procedure `insertPublicacion`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE IF NOT EXISTS insertPublicacion (IN titulo varchar(75), IN descript text, IN precioIni decimal(10, 2), IN precioFin decimal(10, 2), IN catID smallint, IN userID int)
BEGIN
  INSERT INTO publicaciones (tituloP
  , fecha
  , descripcion
  , precioI
  , categoriaID
  , usuarioID
  , valoracion
  , precioF)
    VALUES (titulo -- tituloP - VARCHAR(50) NOT NULL
    , DEFAULT -- fecha - DATETIME NOT NULL
    , descript -- descripcion - TEXT NOT NULL
    , precioIni -- precioI - DECIMAL(10, 2)
    , catID -- categoriaID - SMALLINT NOT NULL
    , userID -- usuarioID - INT NOT NULL
    , DEFAULT -- valoracion - DECIMAL(10, 2) NOT NULL
    , precioFin -- precioF - DECIMAL(10, 2)
    );
END
$$

DELIMITER ;

--
-- Create table `valoraciones`
--
CREATE TABLE IF NOT EXISTS valoraciones (
  ID int NOT NULL AUTO_INCREMENT,
  publicacionID int NOT NULL,
  valorP double NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

DELIMITER $$

--
-- Create trigger `actualizarValoracion`
--
CREATE
DEFINER = 'root'@'localhost'
TRIGGER IF NOT EXISTS actualizarValoracion
AFTER INSERT
ON valoraciones
FOR EACH ROW
BEGIN
  DECLARE sum_valoracion double;
  DECLARE count_valoracion double;

  SELECT
    SUM(v.valorP) INTO sum_valoracion
  FROM valoraciones v
  WHERE v.publicacionID = NEW.publicacionID;
  SELECT
    COUNT(*) INTO count_valoracion
  FROM valoraciones v
  WHERE v.publicacionID = NEW.publicacionID;


  UPDATE publicaciones p
  SET p.valoracion = sum_valoracion / count_valoracion
  WHERE p.ID = NEW.publicacionID;

END
$$

--
-- Create procedure `insertValoracion`
--
CREATE
DEFINER = 'root'@'localhost'
PROCEDURE IF NOT EXISTS insertValoracion (IN pubID int, IN valorV double)
BEGIN
  INSERT INTO valoraciones (publicacionID
  , valorP)
    VALUES (pubID -- publicacionID - INT NOT NULL
    , valorV -- valorP - DOUBLE NOT NULL
    );
END
$$

DELIMITER ;

--
-- Create table `comentarios`
--
CREATE TABLE IF NOT EXISTS comentarios (
  ID int NOT NULL AUTO_INCREMENT,
  comentario text NOT NULL,
  publicacionID int NOT NULL,
  usuarioID int NOT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;